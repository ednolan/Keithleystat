#Ardustat Code

Authors:

- Barry Van Tassell <bajavata@gmail.com>
- Eddie Nolan <tapd260@gmail.com>
- Dan Steingart <dan.steingart@gmail.com>
- Balasubramanian Anantharaman <balaanantharaman@gmail.com>
- Rigers Qeraj <rigersqeraj@gmail.com>
- Susan Tan <onceuponatimeforever@gmail.com>

Rigers, Susan and Eddie were able to work on this because of inspiration by NSF CMMI 1031208  
Balasubramanian is supported by NSF CMMI 1031208

###Installation:
####Software that you need to have installed to use the ardustat:
- [Arduino] (http://arduino.cc/en/Main/Software)
- FTDI Drivers / Arduino Uno Drivers, depending on which version of arduino you are using (see [Getting Started guide for 
arduino] (http://arduino.cc/en/Guide/HomePage)).
- [Python 2] (http://www.python.org/download/releases/2.7.2/)
- [Node.JS] (http://nodejs.org)
- [MongoDB] (http://www.mongodb.org/downloads) (See Quickstart guide for installation [here] (http://www.mongodb.org/display/DOCS/Quickstart))
- Note: If you are installing MongoDB on Mac OS X, it might be helpful to install it using the [homebrew] (http://mxcl.github.com/homebrew/) package manager.
- If you use Windows, you'll also need to install [Visual C++ 2010] (http://www.microsoft.com/visualstudio/en-us/products/2010-editions/visual-cpp-express)

Note: This software is not tested with Internet Explorer or older versions of Firefox, Safari, Chrome, etc. To avoid unpredictable results, please use a modern browser.
	
###Instructions for first run:
1. Install Version of Firmware 10s on your ardustat (Firmware/firmware\_12s/)
2. On Mac OS X and Linux, execute
	- bash startArdustat.sh
<br> (On Windows, execute firstRun.bat, then go to the Ardustat\_Control folder and execute: node expressserver.js COM4 (replace COM4 with your arduino's actual COM port))
3. In a browser, go to http://localhost:8888/debug
	(stuff should be happening)
4. We now need to calibrate the ardustat.  Put a quality resistor of known value between the working and counter clips, and then attach the reference clip to the counter clip
5. Give your ardustat an id: in the "Ardustat Commands"  box type   
	 - V0XXX  
	where XXX is an integer between 0 and 240, and hit send
	(you only have to do this once as well, the id will persist in EEPROM)
6. Under calibration resistor value, enter the value of your resistor in ohms, and hit send
7. You should see the graph changing, the yellow line should slope downwards and then reset 3 time. 
8. Your ardustat is now calibrated.  You won't have to do this again (unless you delete the calibration file or feel that the values were inaccurate)
9. Now go to http://localhost:8888.  You should now see the Potential and Current trace.  Play with the the potentiostsat and galvanostat settings.

From here on out, all you need to do is start startArdustat.sh and then go to http://localhost:8888
<br> (on Windows, you'll still need to go to the Ardustat\_Control folder and execute: node expressserver.js COM4 (replace COM4 with your arduino's actual COM port))


##Now with basic cycling

go to http://localhost:8888/cycler

enter the following format to cycle

{"mode":"galvanostat","value":0.004,"cutoff\_time":0,"direction":"charge","cutoff_potential":1.5}
{"mode":"galvanostat","value":-0.002,"cutoff\_time":0,"direction":"discharge","cutoff_potential":0.6}

a cutoff\_time of 0 means there is no cutoff time.  be careful!  

logs log to mongo

potential value = Volts
current value = Amps
time value = milliseconds

Enjoy!

##Now with basic viewing
from Ardustat\_Viewer start node view_server.js 

go to localhost:8000
